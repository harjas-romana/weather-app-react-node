{"ast":null,"code":"var _jsxFileName = \"/Users/nicksingh/Desktop/client/src/context/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useEffect } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport { authService } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        setUser(decoded);\n      } catch (error) {\n        localStorage.removeItem('token');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      var _response$data;\n      const response = await authService.login(email, password);\n\n      // Debug log\n      console.log('Auth service response:', response);\n\n      // Make sure we're getting a valid token\n      if (!((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.token)) {\n        throw new Error('No token received from server');\n      }\n\n      // Store the token\n      localStorage.setItem('token', response.data.token);\n\n      // Set the user\n      setUser(response.data.user || {\n        email\n      });\n      return response;\n    } catch (error) {\n      console.error('Login error in AuthContext:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      loading\n    },\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useContext","useEffect","jwtDecode","authService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","token","localStorage","getItem","decoded","error","removeItem","login","email","password","_response$data","response","console","log","data","Error","setItem","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/nicksingh/Desktop/client/src/context/AuthContext.jsx"],"sourcesContent":["import { createContext, useState, useContext, useEffect } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport { authService } from '../services/authService';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        setUser(decoded);\n      } catch (error) {\n        localStorage.removeItem('token');\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const response = await authService.login(email, password);\n      \n      // Debug log\n      console.log('Auth service response:', response);\n      \n      // Make sure we're getting a valid token\n      if (!response.data?.token) {\n        throw new Error('No token received from server');\n      }\n\n      // Store the token\n      localStorage.setItem('token', response.data.token);\n      \n      // Set the user\n      setUser(response.data.user || { email });\n      \n      return response;\n    } catch (error) {\n      console.error('Login error in AuthContext:', error);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout, loading }}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext); "],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACtE,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,WAAW,gBAAGR,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5CE,SAAS,CAAC,MAAM;IACd,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACT,IAAI;QACF,MAAMG,OAAO,GAAGf,SAAS,CAACY,KAAK,CAAC;QAChCH,OAAO,CAACM,OAAO,CAAC;MAClB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;MAClC;IACF;IACAN,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MAAA,IAAAC,cAAA;MACF,MAAMC,QAAQ,GAAG,MAAMrB,WAAW,CAACiB,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC;;MAEzD;MACAG,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,QAAQ,CAAC;;MAE/C;MACA,IAAI,GAAAD,cAAA,GAACC,QAAQ,CAACG,IAAI,cAAAJ,cAAA,eAAbA,cAAA,CAAeT,KAAK,GAAE;QACzB,MAAM,IAAIc,KAAK,CAAC,+BAA+B,CAAC;MAClD;;MAEA;MACAb,YAAY,CAACc,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACG,IAAI,CAACb,KAAK,CAAC;;MAElD;MACAH,OAAO,CAACa,QAAQ,CAACG,IAAI,CAACjB,IAAI,IAAI;QAAEW;MAAM,CAAC,CAAC;MAExC,OAAOG,QAAQ;IACjB,CAAC,CAAC,OAAON,KAAK,EAAE;MACdO,OAAO,CAACP,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMY,MAAM,GAAGA,CAAA,KAAM;IACnBf,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;IAChCR,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,IAAI;MAAEU,KAAK;MAAEU,MAAM;MAAElB;IAAQ,CAAE;IAAAJ,QAAA,EAC3D,CAACI,OAAO,IAAIJ;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAAC3B,EAAA,CApDWF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAsDzB,OAAO,MAAM+B,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMvC,UAAU,CAACM,WAAW,CAAC;AAAA;AAACiC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}